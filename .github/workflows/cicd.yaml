name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  ECR_REPOSITORY: java-eks
  EKS_CLUSTER_NAME: aws-eks
  AWS_REGION: eu-north-1

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    # outputs:
    #   image: ${{ steps.build-push-image.outputs.image  }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set short git commit SHA
        id: commit
        uses: prompt/actions-commit-hash@v2

      - name: Set up JDK 22
        uses: actions/setup-java@v2
        with:
          java-version: '22'
          distribution: 'adopt-openj9'
          cache: maven

      - name: Build with Maven
        run: mvn clean package

      - name: Run Tests
        run: mvn test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_REGION}}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-push-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Verify AWS Credentials
        run: aws sts get-caller-identity

      - name: Setup kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: 'v1.29.2'

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

      - name: Deploy to EKS
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
        run: |
          sed -i.bak "s|ECR_IMAGE|${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:${{env.IMAGE_TAG}}|g" k8s/deployment.yaml && \
          kubectl apply -f k8s/deployment.yaml --validate=false
          kubectl apply -f k8s/service.yaml --validate=false
          sed -i.bak "s|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|ECR_IMAGE|g" k8s/deployment.yaml
      
      # - name: Read Output
      #   run: |
      #     echo "${{ steps.build-push-image.outputs.image }}
